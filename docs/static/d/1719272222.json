{"data":{"site":{"siteMetadata":{"testTemplate":"options(error=traceback)\nlibrary(testwhat)\n.solution <- \"${solutionEscaped}\"\n\n.solutionfile <- \"${solutionFileEscaped}\"\n\n\nsetup_state(sol_code = .solutionfile, stu_code = .solution)\n\ntryCatch({\n    ${test}\n    cat(paste(\"\\033[32m\", tw$get()$success_msg, \"\\033[0m\", sep = \"\"))\n}, error = function(e) {\n    cat(paste(\"\\033[31m\", e[1], \"\\033[0m\", sep = \"\"))\n})","juniper":{"repo":"noamross/gams-in-r-course","branch":"master","kernelType":"ir","lang":"r","debug":false}}},"allCode":{"edges":[{"node":{"name":"exc_01_04","code":"library(mgcv)\n\nmcycle <- MASS::mcycle\ngam_mod <- mgcv::gam(accel ~ s(times), data=mcycle)\n\n# Extract the model coefficients\ncoef(____)"}},{"node":{"name":"exc_01_03","code":"mcycle <- MASS::mcycle\n\n# Load mgcv\n___\n\n# Fit the model\ngam_mod <- gam(___ ~ s(___), data = mcycle)\n\n# Plot the results\nplot(gam_mod, residuals = TRUE, pch = 1)"}},{"node":{"name":"exc_01_02","code":"mcycle <- MASS::mcycle\n\n# Examine the mcycle data frame\nhead(___)\nplot(___)\n\n# Fit a linear model\nlm_mod <- lm(___, data = mcycle)\n\n# Visualize the model\ntermplot(lm_mod, partial.resid = TRUE, se = TRUE)"}},{"node":{"name":"exc_01_06","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n\n# Fit a GAM with 3 basis functions\ngam_mod_k3 <- gam(accel ~ s(times, k = ___), data = mcycle)\n\n# Fit with 20 basis functions\ngam_mod_k20 <- gam(___)\n\n# Visualize the GAMs\npar(mfrow = c(1, 2))\nplot(gam_mod_k3, residuals = TRUE, pch = 1)\nplot(gam_mod_k20, residuals = TRUE, pch = 1)"}},{"node":{"name":"exc_01_10","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n\n# Examine the data\n___\n___\n\n# Fit the model\nmod_city <- gam(city.mpg ~ ___, \n                data = mpg, method = \"REML\")\n\n# Plot the model\nplot(mod_city, pages = 1)"}},{"node":{"name":"exc_01_11","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n\n# Fit the model\nmod_city2 <- gam(city.mpg ~ s(weight) + s(length) + s(price) ___, \n                 data = mpg, method = \"REML\")\n\n# Plot the model\nplot(mod_city2, all.terms = TRUE, pages = 1)"}},{"node":{"name":"exc_01_07","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n\n# Extract the smoothing parameter\ngam_mod <- gam(accel ~ s(times), data = mcycle, method = \"REML\")\n___\n\n# Fix the smoothing parameter at 0.1\ngam_mod_s1 <- gam(accel ~ s(times), data = mcycle, sp = ___)\n\n# Fix the smoothing parameter at 0.0001\ngam_mod_s2 <- gam(___)\n\n# Plot both models\npar(mfrow = c(2, 1))\nplot(gam_mod_s1, residuals = TRUE, pch = 1)\nplot(gam_mod_s2, residuals = TRUE, pch = 1)"}},{"node":{"name":"exc_01_08","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n\n# Fit the GAM\ngam_mod_sk <- ___\n\n# Visualize the model\nplot(gam_mod_sk, residuals = TRUE, pch = 1)"}},{"node":{"name":"exc_02_05","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(accel ~ s(times), data = mcycle, method = \"REML\")\n\n# Make the plot with residuals\nplot(mod, ___)\n\n# Change shape of residuals\n___"}},{"node":{"name":"exc_01_12","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n\n# Fit the model\nmod_city3 <- gam(city.mpg ~ ___, \n                 data = mpg, method = \"REML\")\n\n# Plot the model\nplot(mod_city3, pages = 1)"}},{"node":{"name":"exc_02_07","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(weight) + s(rpm) + s(price) + comp.ratio, \n           data = mpg, method = \"REML\")\n\n# Plot the weight effect with colored shading\nplot(mod, select = 1, ___)\n\n# Make another plot adding the intercept value and uncertainty\nplot(mod, select = 1, ___)\n\n"}},{"node":{"name":"exc_02_09","code":"library(mgcv)\n# Fit the model\nmod <- gam(y ~ s(x0, k = 5) + s(x1, k = 5) + s(x2, k = 5) + s(x3, k = 5),\n           data = dat, method = \"REML\")\n\n# Run the check function\n___"}},{"node":{"name":"exc_02_13","code":"library(mgcv)\nlibrary(gamair)\nset.seed(0)\ndata(\"mpg\", package=\"gamair\", verbose=FALSE)\nmod <- mgcv::gam(hw.mpg ~ s(length) + s(width) + s(height) + s(weight), data=mpg, method=\"REML\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(length) + s(width) + s(height) + s(weight), \n           data = mpg, method = \"REML\")\n\n# Check pairwise concurvity\n___\n\n"}},{"node":{"name":"exc_02_12","code":"library(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(length) + s(width) + s(height) + s(weight), \n           data = mpg, method = \"REML\")\n\n# Check overall concurvity\n___\n\n"}},{"node":{"name":"exc_02_10","code":"set.seed(0)\ndat <- mgcv::gamSim(1,n=600, scale=0.6, verbose=FALSE)\nmod <- mgcv::gam(y ~ s(x0, k = 3) + s(x1, k=3) + s(x2, k=3) +s (x3, k=3),\n           data=dat, method = \"REML\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(y ~ s(x0, k = 3) + s(x1, k = 3) + s(x2, k = 3) + s(x3, k = 3),\n           data = dat, method = \"REML\")\n\n# Check the diagnostics\n___\n\n# Refit to fix issues\nmod2 <- gam(y ~ s(x0, k = ___) + s(x1, k = ___) + s(x2, k = ___) + s(x3, k = ___),\n           data = dat, method = \"REML\")\n\n# Check the new model\n___\n"}},{"node":{"name":"exc_03_05","code":"# Contour plot\n___(___, pages = 1)\n\n"}},{"node":{"name":"exc_02_06","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(weight) + s(rpm) + s(price) + comp.ratio, \n           data = mpg, method = \"REML\")\n\n# Plot the price effect\n___\n\n# Plot all effects\n___"}},{"node":{"name":"exc_03_02_1","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\nmod2da <- gam(cadmium ~ s(x, y) ___, \n              data = meuse, method = \"REML\")\n\n# Inspect the model\nsummary(mod2da)\n\n"}},{"node":{"name":"exc_03_03","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\nmod2da <- gam(cadmium ~ s(x, y) ___, \n              data = meuse, method = \"REML\")\n\n# Inspect the model\nsummary(mod2da)\n"}},{"node":{"name":"exc_03_02","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n#mod2d <- mgcv::gam(cadmium ~ s(x,y), data=meuse, method = \"REML\")\n\n# Inspect the data\n___\n___\n\n"}},{"node":{"name":"exc_03_06","code":"data(meuse, package=\"sp\")\nlibrary(mgcv)\nmod2d <- gam(cadmium ~ s(x,y), data=meuse, method = \"REML\")\n\n# Make the perspective plot with error surfaces\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        ___)\n\n"}},{"node":{"name":"exc_03_05_1","code":"# 3D surface plot\n___(mod2da, ___, pages = 1)\n"}},{"node":{"name":"exc_03_05_2","code":"# Colored heat map\nplot(mod2da, ___, ___)\n"}},{"node":{"name":"exc_03_06_1","code":"# Rotate the same plot\nvis.gam(mod2d, ___)\n"}},{"node":{"name":"exc_03_07","code":"data(meuse, package=\"sp\")\nlibrary(mgcv)\nmod2d <- gam(cadmium ~ s(x,y), data=meuse, method = \"REML\")\n\n# Make plot with 5% extrapolation\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"contour\", ___)\n\n# Overlay data\npoints(meuse)\n\n"}},{"node":{"name":"exc_03_06_2","code":"# Rotate the same plot\nvis.gam(mod2d, ___)\n\n"}},{"node":{"name":"exc_03_07_1","code":"# Make plot with 10% extrapolation\nvis.gam(mod2d, view = c(\"x\", \"y\"), ___, ___)\n\n# Overlay data\npoints(meuse)"}},{"node":{"name":"exc_03_07_2","code":"# Make plot with 25% extrapolation\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"contour\", too.far = ___)\n\n# Overlay data\n___\n\n"}},{"node":{"name":"exc_03_09","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit a model with separate smooths for each land-use level\nmod_sep <- ___\n\n# Examine the summary\n___\n"}},{"node":{"name":"exc_03_09_1","code":"# Fit a model with a factor-smooth interaction\nmod_fs <- ___\n\n# Examine the summary\n___\n"}},{"node":{"name":"exc_03_10","code":"data(meuse, package=\"sp\")\nlibrary(mgcv)\nmod_sep <- gam(copper ~ s(dist, by=landuse), data=meuse, method = \"REML\")\nmod_fs <- gam(copper ~ s(dist, landuse, bs=\"fs\"), data=meuse, method = \"REML\")\n\n# Plot both the models with plot()\n___\n___\n\n"}},{"node":{"name":"exc_03_10_1","code":"# Plot both the models with vis.gam()\n___(mod_sep, view = c(\"dist\", \"landuse\"), plot.type = ___)\n___(mod_fs, view = c(\"dist\", \"landuse\"), plot.type = \"persp\")\n\n"}},{"node":{"name":"exc_03_12","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\ntensor_mod <- ___\n\n# Summarize and plot\n___\n___\n\n"}},{"node":{"name":"exc_04_05","code":"csale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/cad8c6b369fb6bfbdbae6b17c01df88e1bd336c4/csale.rds\"))\nset.seed(0)\nlibrary(mgcv)\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) +\n                \t\t   s(avg_prem_balance) + s(retail_crdt_ratio) +\n                           s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\n# Plot on the log-odds scale\n___\t\t\t  "}},{"node":{"name":"exc_03_13","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\ntensor_mod2 <- ___\n\n\n# Summarize and plot\n___\n___(___, pages = 1)\n\n"}},{"node":{"name":"exc_04_02","code":"library(mgcv)\ncsale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/cad8c6b369fb6bfbdbae6b17c01df88e1bd336c4/csale.rds\"))\nlog_mod <- gam(purchase ~ s(mortgage_age), data = csale, \n               family = binomial, \n               method = \"REML\")\n\t\t\t   \n# Examine the csale data frame\nhead(csale)\nstr(csale)\n\n# Fit a logistic model\nlog_mod <- gam(___, data = csale, \n               ___, \n               method = \"REML\")\n"}},{"node":{"name":"exc_04_05_1","code":"# Plot on the probability scale\nplot(log_mod2, pages = 1, trans = ___)\n\n\n"}},{"node":{"name":"exc_04_03","code":"csale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/cad8c6b369fb6bfbdbae6b17c01df88e1bd336c4/csale.rds\"))\nlibrary(mgcv)\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) + s(avg_prem_balance) + s(retail_crdt_ratio) + s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\t\t\t  \n# Fit a logistic model\nlog_mod2 <- gam(___,\n                data = csale,\n                family = binomial,\n                method = \"REML\")\n\n# View the summary\n___\n\n"}},{"node":{"name":"exc_04_05_2","code":"# Plot with the intercept\nplot(log_mod2, pages = 1, trans = plogis, \n     shift = ___)\n"}},{"node":{"name":"exc_04_05_3","code":"# Plot with intercept uncertainty\nplot(log_mod2, pages = 1, trans = plogis, \n     shift = coef(log_mod2)[1], seWithMean = ___)\n"}},{"node":{"name":"exc_04_10_1","code":"# Calculate predictions and errors\npredictions <- predict(log_mod2, newdata = new_credit_data, \n                       type = \"link\", se.fit = TRUE)\n\n# Calculate high and low prediction intervals\nhigh_pred <- ___\nlow_pred <- ___\n"}},{"node":{"name":"exc_04_10","code":"library(mgcv)\ncsale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/3331154338220d6597187e3c7bc1e5b7ec064858/csale.rds\"))\nnew_credit_data <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/c76599b99a7f00c8b7f74ca7765b2186216b0dde/new_credit_data.rds\"))\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) +\n                \t\t   s(avg_prem_balance) + s(retail_crdt_ratio) +\n                           s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\t\t\t  \n# Calculate predictions and errors\npredictions <- ___(log_mod2, newdata = ___, \n                       type = ___, se.fit = ___)\n\n# Inspect the predictions\npredictions\n\n"}},{"node":{"name":"exc_04_10_2","code":"# Calculate predictions and errors\npredictions <- predict(log_mod2, newdata = new_credit_data, \n                       type = \"link\", se.fit = TRUE)\n\n# Calculate high and low predictions intervals\nhigh_pred <- predictions$fit + 2*predictions$se.fit\nlow_pred <- predictions$fit - 2*predictions$se.fit\n\n# Convert intervals to probability scale\nhigh_prob <- ___\nlow_prob <- ___\n\n# Inspect\nhigh_prob\nlow_prob\n"}},{"node":{"name":"exc_04_11","code":"library(mgcv)\ncsale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/3331154338220d6597187e3c7bc1e5b7ec064858/csale.rds\"))\nnew_credit_data <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/c76599b99a7f00c8b7f74ca7765b2186216b0dde/new_credit_data.rds\"))\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) +\n                \t\t   s(avg_prem_balance) + s(retail_crdt_ratio) +\n                           s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n# Predict from the model\nprediction_1 <- ___(log_mod2, \n                        newdata = ___, \n                        type = ___)\n\n# Inspect\nprediction_1\n"}},{"node":{"name":"solution_01_02","code":"mcycle <- MASS::mcycle\n\n# Examine the mcycle data frame\nhead(mcycle)\nplot(mcycle)\n\n# Fit a linear model\nlm_mod <- lm(accel ~ times, data = mcycle)\n\n# Visualize the model\ntermplot(lm_mod, partial.resid = TRUE, se = TRUE)"}},{"node":{"name":"solution_01_03","code":"mcycle <- MASS::mcycle\n\n# Load mgcv\nlibrary(mgcv)\n\n# Fit the model\ngam_mod <- gam(accel ~ s(times), data = mcycle)\n\n# Plot the results\nplot(gam_mod, residuals = TRUE, pch = 1)"}},{"node":{"name":"solution_01_04","code":"library(mgcv)\n\nmcycle <- MASS::mcycle\ngam_mod <- mgcv::gam(accel ~ s(times), data=mcycle)\n\n# Extract the model coefficients\ncoef(gam_mod)"}},{"node":{"name":"solution_01_06","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n\n# Fit a GAM with 3 basis functions\ngam_mod_k3 <- gam(accel ~ s(times, k = 3), data = mcycle)\n\n# Fit with 20 basis functions\ngam_mod_k20 <- gam(accel ~ s(times, k = 20), data = mcycle)\n\n# Visualize the GAMs\npar(mfrow = c(1, 2))\nplot(gam_mod_k3, residuals = TRUE, pch = 1)\nplot(gam_mod_k20, residuals = TRUE, pch = 1)"}},{"node":{"name":"solution_01_07","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n\n# Extract the smoothing parameter\ngam_mod <- gam(accel ~ s(times), data = mcycle, method = \"REML\")\ngam_mod$sp\n\n# Fix the smoothing parameter at 0.1\ngam_mod_s1 <- gam(accel ~ s(times), data = mcycle, sp = 0.1)\n\n# Fix the smoothing parameter at 0.0001\ngam_mod_s2 <- gam(accel ~ s(times), data = mcycle, sp = 0.0001)\n\n# Plot both models\npar(mfrow = c(2, 1))\nplot(gam_mod_s1, residuals = TRUE, pch = 1)\nplot(gam_mod_s2, residuals = TRUE, pch = 1)"}},{"node":{"name":"solution_01_10","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n\n# Examine the data\nhead(mpg)\nstr(mpg)\n\n# Fit the model\nmod_city <- gam(city.mpg ~ s(weight) + s(length) + s(price), \n                data = mpg, method = \"REML\")\n\n# Plot the model\nplot(mod_city, pages = 1)"}},{"node":{"name":"solution_01_08","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n\n# Fit the GAM\ngam_mod_sk <- gam(accel ~ s(times, k = 50), data = mcycle, sp = 0.0001)\n\n# Visualize the model\nplot(gam_mod_sk, residuals = TRUE, pch = 1)"}},{"node":{"name":"solution_01_11","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n\n# Fit the model\nmod_city2 <- gam(city.mpg ~ s(weight) + s(length) + s(price) + fuel + drive + style,\n                 data = mpg, method = \"REML\")\n\n# Plot the model\nplot(mod_city2, all.terms = TRUE, pages = 1)"}},{"node":{"name":"solution_01_12","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n\n# Fit the model\nmod_city3 <- gam(city.mpg ~ s(weight, by = drive) + s(length, by = drive) + s(price, by = drive) + drive,\n                 data = mpg, method = \"REML\")\n\n# Plot the model\nplot(mod_city3, pages = 1)\n"}},{"node":{"name":"solution_02_02","code":"library(mgcv)\n# Fit the model\nmod_city4 <- gam(city.mpg ~ s(weight) + s(length) + s(price) + s(rpm) + s(width),\n                 data = mpg, method = \"REML\")\n\n# View the summary\nsummary(mod_city4)"}},{"node":{"name":"solution_02_05","code":"mcycle <- MASS::mcycle\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(accel ~ s(times), data = mcycle, method = \"REML\")\n\n# Make the plot with residuals\nplot(mod, residuals = TRUE)\n\n# Change shape of residuals\nplot(mod, residuals = TRUE, pch = 1, cex = 1)"}},{"node":{"name":"solution_02_06","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(weight) + s(rpm) + s(price) + comp.ratio, \n           data = mpg, method = \"REML\")\n\n# Plot the price effect\nplot(mod, select = 3)\n\n# Plot all effects\nplot(mod, pages = 1, all.terms = TRUE)"}},{"node":{"name":"solution_02_07","code":"library(gamair)\ndata(\"mpg\", package=\"gamair\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(weight) + s(rpm) + s(price) + comp.ratio, \n           data = mpg, method = \"REML\")\n\n# Plot the weight effect\nplot(mod, select = 1, shade = TRUE, shade.col = \"hotpink\")\n\n# Make another plot adding the intercept value and uncertainty\nplot(mod, select = 1, shade = TRUE, shade.col = \"hotpink\", \n     shift = coef(mod)[1], seWithMean = TRUE)"}},{"node":{"name":"solution_02_10","code":"set.seed(0)\ndat <- mgcv::gamSim(1,n=600, scale=0.6, verbose=FALSE)\nmod <- mgcv::gam(y ~ s(x0, k = 3) + s(x1, k=3) + s(x2, k=3) +s (x3, k=3),\n           data=dat, method = \"REML\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(y ~ s(x0, k = 3) + s(x1, k = 3) + s(x2, k = 3) + s(x3, k = 3),\n           data = dat, method = \"REML\")\n\n# Check the diagnostics\ngam.check(mod)\n\n# Refit to fix issues\nmod2 <- gam(y ~ s(x0, k = 3) + s(x1, k = 3) + s(x2, k = 10) + s(x3, k = 3),\n           data = dat, method = \"REML\")\n\n# Check the new model\ngam.check(mod2)\n"}},{"node":{"name":"solution_02_09","code":"library(mgcv)\n# Fit the model\nmod <- gam(y ~ s(x0, k = 5) + s(x1, k = 5) + s(x2, k = 5) + s(x3, k = 5),\n           data = dat, method = \"REML\")\n\n# Run the check function\ngam.check(mod)"}},{"node":{"name":"solution_02_13","code":"library(mgcv)\nlibrary(gamair)\nset.seed(0)\ndata(\"mpg\", package=\"gamair\", verbose=FALSE)\nmod <- mgcv::gam(hw.mpg ~ s(length) + s(width) + s(height) + s(weight), data=mpg, method=\"REML\")\n\nlibrary(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(length) + s(width) + s(height) + s(weight), \n           data = mpg, method = \"REML\")\n\n# Check overall concurvity\nconcurvity(mod, full = FALSE)"}},{"node":{"name":"solution_02_12","code":"library(mgcv)\n# Fit the model\nmod <- gam(hw.mpg ~ s(length) + s(width) + s(height) + s(weight), \n           data = mpg, method = \"REML\")\n\n# Check overall concurvity\nconcurvity(mod, full = TRUE)"}},{"node":{"name":"solution_03_02","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n#mod2d <- mgcv::gam(cadmium ~ s(x,y), data=meuse, method = \"REML\")\n\n# Inspect the data\nhead(meuse)\nstr(meuse)"}},{"node":{"name":"solution_03_02_1","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\nmod2da <- gam(cadmium ~ s(x, y) + s(dist) + s(elev), \n              data = meuse, method = \"REML\")\n\n# Inspect the model\nsummary(mod2da)"}},{"node":{"name":"solution_03_03","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\nmod2da <- gam(cadmium ~ s(x, y) + s(dist) + s(elev), \n              data = meuse, method = \"REML\")\n\n# Inspect the model\nsummary(mod2da)\n"}},{"node":{"name":"solution_03_05","code":"# Contour plot\nplot(mod2da, pages = 1)\n"}},{"node":{"name":"solution_03_05_2","code":"# Colored heat map\nplot(mod2da, scheme = 2, pages = 1)\n"}},{"node":{"name":"solution_03_05_1","code":"# 3D surface plot\nplot(mod2da, scheme = 1, pages = 1)\n"}},{"node":{"name":"solution_03_06","code":"data(meuse, package=\"sp\")\nlibrary(mgcv)\nmod2d <- gam(cadmium ~ s(x,y), data=meuse, method = \"REML\")\n\n# Make the perspective plot with error surfaces\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"persp\", se = 2)\n"}},{"node":{"name":"solution_03_06_1","code":"# Rotate the same plot\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"persp\", se = 2, theta = 135)"}},{"node":{"name":"solution_03_06_2","code":"# Rotate the same plot\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"persp\", se = 2, theta = 135)\n"}},{"node":{"name":"solution_03_07","code":"data(meuse, package=\"sp\")\nlibrary(mgcv)\nmod2d <- gam(cadmium ~ s(x,y), data=meuse, method = \"REML\")\n\n# Make plot with 5% extrapolation\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"contour\", too.far = 0.05)\n\n# Overlay data\npoints(meuse)"}},{"node":{"name":"solution_03_07_1","code":"# Make plot with 10% extrapolation\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"contour\", too.far = 0.1)\n\n# Overlay data\npoints(meuse)"}},{"node":{"name":"solution_03_07_2","code":"# Make plot with 25% extrapolation\nvis.gam(mod2d, view = c(\"x\", \"y\"), \n        plot.type = \"contour\", too.far = 0.25)\n\n# Overlay data\npoints(meuse)\n"}},{"node":{"name":"solution_03_09_1","code":"# Fit a model with factor-smooth interaction\nmod_fs <- gam(copper ~ s(dist, landuse, bs = \"fs\"), \n              data = meuse, method = \"REML\")\n\n# Examine the summary\nsummary(mod_fs)"}},{"node":{"name":"solution_03_09","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit a model with separate smooths for each land-use level\nmod_sep <- gam(copper ~ s(dist, by = landuse) + landuse, \n               data = meuse, method = \"REML\")\n\n# Examine the summary\n"}},{"node":{"name":"solution_03_10_1","code":"# Plot both the models with vis.gam()\nvis.gam(mod_sep, view = c(\"dist\", \"landuse\"), plot.type = \"persp\")\nvis.gam(mod_fs, view = c(\"dist\", \"landuse\"), plot.type = \"persp\")"}},{"node":{"name":"solution_03_10","code":"data(meuse, package=\"sp\")\nlibrary(mgcv)\nmod_sep <- gam(copper ~ s(dist, by=landuse), data=meuse, method = \"REML\")\nmod_fs <- gam(copper ~ s(dist, landuse, bs=\"fs\"), data=meuse, method = \"REML\")\n\n# Plot both the models with plot()\nplot(mod_sep, pages = 1)\nplot(mod_fs, pages = 1)\n\n"}},{"node":{"name":"solution_03_12","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\ntensor_mod <- gam(cadmium ~ te(x, y, elev), \n                  data = meuse, method = \"REML\")\n\n# Summarize and plot\nsummary(tensor_mod)\nplot(tensor_mod)\n"}},{"node":{"name":"solution_03_13","code":"library(mgcv)\ndata(meuse, package=\"sp\")\n\n# Fit the model\ntensor_mod2 <- gam(cadmium ~ s(x, y) + s(elev) + ti(x, y, elev), \n                   data = meuse, method = \"REML\")\n\n# Summarize and plot\nsummary(tensor_mod2)\nplot(tensor_mod2, pages = 1)\n"}},{"node":{"name":"solution_04_03","code":"csale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/cad8c6b369fb6bfbdbae6b17c01df88e1bd336c4/csale.rds\"))\nlibrary(mgcv)\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) + s(avg_prem_balance) + s(retail_crdt_ratio) + s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\t\t\t  \n# Fit a logistic model\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) + \n                  s(avg_prem_balance) + s(retail_crdt_ratio) +\n                  s(avg_fin_balance)  + s(mortgage_age) +\n                  s(cred_limit),\n                data = csale,\n                family = binomial,\n                method = \"REML\")\n\n# View the summary\nsummary(log_mod2)\n\n"}},{"node":{"name":"solution_04_02","code":"library(mgcv)\ncsale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/cad8c6b369fb6bfbdbae6b17c01df88e1bd336c4/csale.rds\"))\nlog_mod <- gam(purchase ~ s(mortgage_age), data = csale, \n               family = binomial, \n               method = \"REML\")\n\t\t\t   \n# Examine the csale data frame\nhead(csale)\nstr(csale)\n\n# Fit a logistic model\nlog_mod <- gam(purchase ~ s(mortgage_age), data = csale, \n               family = binomial, \n               method = \"REML\")"}},{"node":{"name":"solution_04_05","code":"csale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/cad8c6b369fb6bfbdbae6b17c01df88e1bd336c4/csale.rds\"))\nset.seed(0)\nlibrary(mgcv)\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) +\n                \t\t   s(avg_prem_balance) + s(retail_crdt_ratio) +\n                           s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\n# Plot on the log-odds scale\nplot(log_mod2, pages = 1)"}},{"node":{"name":"solution_04_05_3","code":"# Plot with intercept uncertainty\nplot(log_mod2, pages = 1, trans = plogis, \n     shift = coef(log_mod2)[1], seWithMean = TRUE)"}},{"node":{"name":"solution_04_05_1","code":"# Plot on the probability scale\nplot(log_mod2, pages = 1, trans = plogis)\n"}},{"node":{"name":"solution_04_05_2","code":"# Plot with the intercept\nplot(log_mod2, pages = 1, trans = plogis, \n     shift = coef(log_mod2)[1])"}},{"node":{"name":"solution_04_10","code":"library(mgcv)\ncsale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/3331154338220d6597187e3c7bc1e5b7ec064858/csale.rds\"))\nnew_credit_data <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/c76599b99a7f00c8b7f74ca7765b2186216b0dde/new_credit_data.rds\"))\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) +\n                \t\t   s(avg_prem_balance) + s(retail_crdt_ratio) +\n                           s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\t\t\t  \n# Calculate predictions and errors\npredictions <- predict(log_mod2, newdata = new_credit_data, \n                       type = \"link\", se.fit = TRUE)\n\n# Inspect the predictions\npredictions"}},{"node":{"name":"solution_04_11","code":"library(mgcv)\ncsale <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/3331154338220d6597187e3c7bc1e5b7ec064858/csale.rds\"))\nnew_credit_data <- readRDS(url(\"https://assets.datacamp.com/production/repositories/1786/datasets/c76599b99a7f00c8b7f74ca7765b2186216b0dde/new_credit_data.rds\"))\nlog_mod2 <- gam(purchase ~ s(n_acts) + s(bal_crdt_ratio) +\n                \t\t   s(avg_prem_balance) + s(retail_crdt_ratio) +\n                           s(avg_fin_balance)  + s(mortgage_age) + s(cred_limit),\n              data = csale,\n              family = binomial,\n              method = \"REML\")\n\n# Predict from the model\nprediction_1 <- predict(log_mod2, \n                        newdata = new_credit_data[1, ], \n                        type = \"terms\")\n\n# Inspect\nprediction_1\n"}},{"node":{"name":"solution_04_10_1","code":"# Calculate predictions and errors\npredictions <- predict(log_mod2, newdata = new_credit_data, \n                       type = \"link\", se.fit=TRUE)\n\n# Calculate high and low predictions intervals\nhigh_pred <- predictions$fit + 2*predictions$se.fit\nlow_pred <- predictions$fit - 2*predictions$se.fit\n"}},{"node":{"name":"solution_04_10_2","code":"# Calculate predictions and errors\npredictions <- predict(log_mod2, newdata = new_credit_data, \n                       type = \"link\", se.fit=TRUE)\n\n# Calculate high and low predictions intervals\nhigh_pred <- predictions$fit + 2*predictions$se.fit\nlow_pred <- predictions$fit - 2*predictions$se.fit\n\n# Convert intervals to probability scale\nhigh_prob <- plogis(high_pred)\nlow_prob <- plogis(low_pred)\n\nhigh_prob\nlow_prob"}}]}}}