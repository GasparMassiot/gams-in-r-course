{"version":3,"sources":["webpack:///./src/components/button.js","webpack:///./src/context.js","webpack:///./src/components/exercise.js","webpack:///./src/components/hint.js","webpack:///./src/components/code.js","webpack:///./src/components/slides.js","webpack:///./src/components/choice.js","webpack:///./src/markdown.js","webpack:///./src/templates/chapter.js","webpack:///./static/icon_check.svg","webpack:///./static/icon_slides.svg"],"names":["Button","_ref","_classNames","_ref$Component","Component","children","onClick","variant","small","className","buttonClassNames","classNames","classes","root","primary","secondary","react_default","a","createElement","CompleteButton","_ref2","_classNames2","completed","toggleComplete","_ref2$small","completeInactive","completeActive","button_Button","Fragment","icon_check_default","width","height","completeIcon","completeLabel","completeLabelHover","ChapterContext","React","createContext","Exercise","_classNames3","id","title","type","excRef","useRef","excId","parseInt","_useContext","useContext","activeExc","setActiveExc","setCompleted","isExpanded","isCompleted","includes","useEffect","current","scrollIntoView","handleExpand","useCallback","handleNext","handleSetCompleted","newCompleted","filter","v","concat","rootClassNames","expanded","wide","titleClassNames","titleExpanded","ref","idCompleted","icon_slides_default","icon","footer","button_CompleteButton","Hint","_ref$expanded","_ref$actions","actions","_useState","useState","setIsExpanded","content","label","map","i","text","key","CodeBlock","state","Juniper","showSolution","handleShowSolution","this","setState","handleReset","updateJuniper","_this2","Promise","resolve","then","__webpack_require__","bind","default","componentDidMount","componentDidUpdate","render","_this3","_this$state","_this$props","props","source","solution","test","sourceId","solutionId","testId","juniperClassNames","cell","input","button","output","hintActions","gatsby_browser_entry","query","data","allCode","testTemplate","site","siteMetadata","_data$site$siteMetada","juniper","repo","branch","kernelType","debug","lang","files","Object","assign","apply","edges","_ref3","node","name","code","sourceFile","solutionFile","testFile","msgButton","_ref4","runCode","value","template","solutionEscaped","replace","makeTest","hint_Hint","_1719272222","getSlideContent","allMarkdownRemark","fields","slug","rawMarkdownBody","split","f","trim","Slides","t","Reveal","window","marked","Marked","_ref5","RevealMarkdown","init","initialize","center","progress","showNotes","controls","minScale","maxScale","componentWillUnmount","require","revealClassNames","reveal","slideClassNames","slides","markdown","data-markdown","data-separator-notes","data-template","defaultValue","_1922309225","Choice","_ref$id","_ref$children","selected","setSelected","_useState2","answer","setAnswer","handleAnswer","options","child","option","checked","onChange","htmlFor","dangerouslySetInnerHTML","__html","isCorrect","correct","answerLabel","answerLabelCorrect","renderAst","rehypeReact","components","exercise","codeblock","choice","opt","Link","hr","Hr","h3","H3","ol","Ol","ul","Ul","li","Li","InlineCode","Compiler","d","__webpack_exports__","pageQuery","Template","markdownRemark","courseId","frontmatter","htmlAst","description","prev","next","_useLocalStorage","useLocalStorage","html","buttons","Provider","layout","pagination","navigate","IconCheck","defaultProps","viewBox","fill","module","exports","IconSlides","cx","cy","r"],"mappings":"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","file":"component---src-templates-chapter-js-a6fe7521dd5e573c6b73.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nimport IconCheck from '../../static/icon_check.svg'\nimport classes from '../styles/button.module.sass'\n\nexport const Button = ({ Component = 'button', children, onClick, variant, small, className }) => {\n    const buttonClassNames = classNames(classes.root, className, {\n        [classes.primary]: variant === 'primary',\n        [classes.secondary]: variant === 'secondary',\n        [classes.small]: !!small,\n    })\n    return (\n        <Component className={buttonClassNames} onClick={onClick}>\n            {children}\n        </Component>\n    )\n}\n\nexport const CompleteButton = ({ completed, toggleComplete, small = true }) => {\n    const buttonClassNames = classNames({\n        [classes.completeInactive]: !completed,\n        [classes.completeActive]: completed,\n    })\n    return (\n        <Button small={small} onClick={toggleComplete} className={buttonClassNames}>\n            {!completed ? (\n                'Mark as completed'\n            ) : (\n                <>\n                    <IconCheck width={14} height={14} className={classes.completeIcon} />{' '}\n                    <span className={classes.completeLabel}>Completed</span>{' '}\n                    <span className={classes.completeLabelHover}>Remove from completed</span>\n                </>\n            )}\n        </Button>\n    )\n}\n","import React from 'react'\n\nexport const ChapterContext = React.createContext()\n","import React, { useRef, useCallback, useContext, useEffect } from 'react'\nimport classNames from 'classnames'\n\nimport { Button, CompleteButton } from './button'\nimport { ChapterContext } from '../context'\nimport IconSlides from '../../static/icon_slides.svg'\nimport classes from '../styles/exercise.module.sass'\n\nconst Exercise = ({ id, title, type, children }) => {\n    const excRef = useRef()\n    const excId = parseInt(id)\n    const { activeExc, setActiveExc, completed, setCompleted } = useContext(ChapterContext)\n    const isExpanded = activeExc === excId\n    const isCompleted = completed.includes(excId)\n    useEffect(() => {\n        if (isExpanded && excRef.current) {\n            excRef.current.scrollIntoView()\n        }\n    }, [isExpanded])\n    const handleExpand = useCallback(() => setActiveExc(isExpanded ? null : excId), [\n        isExpanded,\n        excId,\n    ])\n    const handleNext = useCallback(() => setActiveExc(excId + 1))\n    const handleSetCompleted = useCallback(() => {\n        const newCompleted = isCompleted\n            ? completed.filter(v => v !== excId)\n            : [...completed, excId]\n        setCompleted(newCompleted)\n    }, [isCompleted, completed, excId])\n    const rootClassNames = classNames(classes.root, {\n        [classes.expanded]: isExpanded,\n        [classes.wide]: isExpanded && type === 'slides',\n        [classes.completed]: !isExpanded && isCompleted,\n    })\n    const titleClassNames = classNames(classes.title, {\n        [classes.titleExpanded]: isExpanded,\n    })\n    return (\n        <section ref={excRef} id={id} className={rootClassNames}>\n            <h2 className={titleClassNames} onClick={handleExpand}>\n                <span>\n                    <span\n                        className={classNames(classes.id, { [classes.idCompleted]: isCompleted })}\n                    >\n                        {excId}\n                    </span>\n                    {title}\n                </span>\n                {type === 'slides' && <IconSlides className={classes.icon} />}\n            </h2>\n            {isExpanded && (\n                <div>\n                    {children}\n                    <footer className={classes.footer}>\n                        <CompleteButton\n                            completed={isCompleted}\n                            toggleComplete={handleSetCompleted}\n                        />\n                        <Button onClick={handleNext} variant=\"secondary\" small>\n                            Next\n                        </Button>\n                    </footer>\n                </div>\n            )}\n        </section>\n    )\n}\n\nexport default Exercise\n","import React, { useState, useCallback } from 'react'\n\nimport classes from '../styles/hint.module.sass'\n\nexport const Hint = ({ expanded = false, actions = [], children }) => {\n    const [isExpanded, setIsExpanded] = useState(expanded)\n    const handleExpand = useCallback(() => setIsExpanded(!isExpanded), [isExpanded])\n    return (\n        <aside className={classes.root}>\n            {isExpanded && children && <div className={classes.content}>{children}</div>}\n            <menu className={classes.actions}>\n                {children && (\n                    <button className={classes.label} onClick={handleExpand}>\n                        {isExpanded ? 'Hide hints' : 'Show hints'}\n                    </button>\n                )}\n                {actions.map(({ text, onClick }, i) => (\n                    <button className={classes.label} key={i} onClick={onClick}>\n                        {text}\n                    </button>\n                ))}\n            </menu>\n        </aside>\n    )\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { Hint } from './hint'\nimport { Button } from './button'\n\nimport classes from '../styles/code.module.sass'\n\nfunction getFiles({ allCode }) {\n    return Object.assign(\n        {},\n        ...allCode.edges.map(({ node }) => ({\n            [node.name]: node.code,\n        }))\n    )\n}\n\nfunction makeTest(template, testFile, solution) {\n    // Escape quotation marks in the solution code, for cases where we\n    // can only place the solution in regular quotes.\n    const solutionEscaped = solution.replace(/\"/g, '\\\\\"')\n    return template\n        .replace(/\\${solutionEscaped}/g, solutionEscaped)\n        .replace(/\\${solution}/g, solution)\n        .replace(/\\${test}/g, testFile)\n}\n\nclass CodeBlock extends React.Component {\n    state = { Juniper: null, showSolution: false, key: 0 }\n\n    handleShowSolution() {\n        this.setState({ showSolution: true })\n    }\n\n    handleReset() {\n        // Using the key as a hack to force component to rerender\n        this.setState({ showSolution: false, key: this.state.key + 1 })\n    }\n\n    updateJuniper() {\n        // This type of stuff only really works in class components. I'm not\n        // sure why, but I've tried with function components and hooks lots of\n        // times and couldn't get it to work. So class component it is.\n        if (!this.state.Juniper) {\n            // We need a dynamic import here for SSR. Juniper's dependencies\n            // include references to the global window object and I haven't\n            // managed to fix this using webpack yet. If we imported Juniper\n            // at the top level, Gatsby won't build.\n            import('./juniper').then(Juniper => {\n                this.setState({ Juniper: Juniper.default })\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.updateJuniper()\n    }\n\n    componentDidUpdate() {\n        this.updateJuniper()\n    }\n\n    render() {\n        const { Juniper, showSolution } = this.state\n        const { id, source, solution, test, children } = this.props\n        const sourceId = source || `exc_${id}`\n        const solutionId = solution || `solution_${id}`\n        const testId = test || `test_${id}`\n        const juniperClassNames = {\n            cell: classes.cell,\n            input: classes.input,\n            button: classes.button,\n            output: classes.output,\n        }\n        const hintActions = [\n            { text: 'Show solution', onClick: () => this.handleShowSolution() },\n            { text: 'Reset', onClick: () => this.handleReset() },\n        ]\n\n        return (\n            <StaticQuery\n                query={graphql`\n                    {\n                        site {\n                            siteMetadata {\n                                testTemplate\n                                juniper {\n                                    repo\n                                    branch\n                                    kernelType\n                                    lang\n                                    debug\n                                }\n                            }\n                        }\n                        allCode {\n                            edges {\n                                node {\n                                    name\n                                    code\n                                }\n                            }\n                        }\n                    }\n                `}\n                render={data => {\n                    const { testTemplate } = data.site.siteMetadata\n                    const { repo, branch, kernelType, debug, lang } = data.site.siteMetadata.juniper\n                    const files = getFiles(data)\n                    const sourceFile = files[sourceId]\n                    const solutionFile = files[solutionId]\n                    const testFile = files[testId]\n                    return (\n                        <div className={classes.root} key={this.state.key}>\n                            {Juniper && (\n                                <Juniper\n                                    msgButton={null}\n                                    classNames={juniperClassNames}\n                                    repo={repo}\n                                    branch={branch}\n                                    lang={lang}\n                                    kernelType={kernelType}\n                                    debug={debug}\n                                    actions={({ runCode }) => (\n                                        <>\n                                            <Button onClick={() => runCode()}>Run Code</Button>\n                                            {testFile && (\n                                                <Button\n                                                    variant=\"primary\"\n                                                    onClick={() =>\n                                                        runCode(value =>\n                                                            makeTest(testTemplate, testFile, value)\n                                                        )\n                                                    }\n                                                >\n                                                    Submit\n                                                </Button>\n                                            )}\n                                        </>\n                                    )}\n                                >\n                                    {showSolution ? solutionFile : sourceFile}\n                                </Juniper>\n                            )}\n                            <Hint actions={hintActions}>{children}</Hint>\n                        </div>\n                    )\n                }}\n            />\n        )\n    }\n}\n\nexport default CodeBlock\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Marked from 'reveal.js/plugin/markdown/marked.js'\nimport classNames from 'classnames'\n\nimport '../styles/reveal.css'\nimport classes from '../styles/slides.module.sass'\n\nfunction getFiles({ allMarkdownRemark }) {\n    return Object.assign(\n        {},\n        ...allMarkdownRemark.edges.map(({ node }) => ({\n            [node.fields.slug.replace('/', '')]: node.rawMarkdownBody,\n        }))\n    )\n}\n\nfunction getSlideContent(data, source) {\n    const files = getFiles(data)\n    const file = files[source] || ''\n    return file.split('\\n---\\n').map(f => f.trim())\n}\n\nclass Slides extends React.Component {\n    componentDidMount() {\n        import('reveal.js').then(({ default: Reveal }) => {\n            window.Reveal = Reveal\n            window.marked = Marked\n            import('reveal.js/plugin/markdown/markdown.js').then(({ RevealMarkdown }) => {\n                RevealMarkdown.init()\n                Reveal.initialize({\n                    center: false,\n                    progress: false,\n                    showNotes: true,\n                    controls: true,\n                    width: '100%',\n                    height: 600,\n                    minScale: 0.75,\n                    maxScale: 1,\n                })\n            })\n        })\n    }\n\n    componentWillUnmount() {\n        // Work around default reveal.js behaviour that doesn't allow\n        // re-initialization and clashes with React\n        delete window.Reveal\n        delete window.marked\n        delete require.cache[require.resolve('reveal.js')]\n        delete require.cache[require.resolve('reveal.js/plugin/markdown/markdown.js')]\n    }\n\n    render() {\n        const { source } = this.props\n        const revealClassNames = classNames('reveal', 'show-notes', classes.reveal)\n        const slideClassNames = classNames('slides', classes.slides)\n\n        return (\n            <div className={classes.root}>\n                <div className={revealClassNames}>\n                    <StaticQuery\n                        query={graphql`\n                            {\n                                allMarkdownRemark(\n                                    filter: { frontmatter: { type: { eq: \"slides\" } } }\n                                ) {\n                                    edges {\n                                        node {\n                                            rawMarkdownBody\n                                            fields {\n                                                slug\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        `}\n                        render={data => {\n                            const content = getSlideContent(data, source)\n                            return (\n                                <div className={slideClassNames}>\n                                    {content.map((markdown, i) => (\n                                        <section\n                                            key={i}\n                                            data-markdown=\"\"\n                                            data-separator-notes=\"^Notes:\"\n                                        >\n                                            <textarea data-template defaultValue={markdown} />\n                                        </section>\n                                    ))}\n                                </div>\n                            )\n                        }}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Slides\n","import React, { useState, useCallback } from 'react'\nimport classNames from 'classnames'\n\nimport { Button } from './button'\nimport classes from '../styles/choice.module.sass'\n\nconst Choice = ({ id = '0', children = [] }) => {\n    const [selected, setSelected] = useState(null)\n    const [answer, setAnswer] = useState(null)\n    const handleAnswer = useCallback(() => setAnswer(selected), [selected])\n    const options = children.filter(child => child !== '\\n')\n    return (\n        <>\n            {options.map(({ key, props }, i) => (\n                <p key={key} className={classes.option}>\n                    <input\n                        className={classes.input}\n                        name={`choice-${id}`}\n                        id={`choice-${id}-${i}`}\n                        value={i}\n                        type=\"radio\"\n                        checked={selected === i}\n                        onChange={() => setSelected(i)}\n                    />\n                    <label\n                        className={classes.label}\n                        htmlFor={`choice-${id}-${i}`}\n                        dangerouslySetInnerHTML={{ __html: `<span>${props.text}</span>` }}\n                    />\n                </p>\n            ))}\n            <Button variant=\"primary\" onClick={handleAnswer}>\n                Submit\n            </Button>\n            {options.map(({ key, props }, i) => {\n                const isCorrect = !!props.correct\n                return answer === i ? (\n                    <div\n                        key={key}\n                        className={classNames(classes.answer, { [classes.correct]: isCorrect })}\n                    >\n                        <strong\n                            className={classNames(classes.answerLabel, {\n                                [classes.answerLabelCorrect]: isCorrect,\n                            })}\n                        >\n                            {isCorrect ? \"That's correct! \" : 'Incorrect. '}\n                        </strong>\n                        {props.children}\n                    </div>\n                ) : null\n            })}\n        </>\n    )\n}\n\nexport const Option = ({ children }) => {\n    return children\n}\n\nexport default Choice\n","import React from 'react'\nimport rehypeReact from 'rehype-react'\n\nimport Exercise from './components/exercise'\nimport CodeBlock from './components/code'\nimport { Link } from './components/link'\nimport Slides from './components/slides'\nimport Choice, { Option } from './components/choice'\nimport { H3, Hr, Ol, Ul, Li, InlineCode } from './components/typography'\n\nexport const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: {\n        exercise: Exercise,\n        slides: Slides,\n        codeblock: CodeBlock,\n        choice: Choice,\n        opt: Option,\n        a: Link,\n        hr: Hr,\n        h3: H3,\n        ol: Ol,\n        ul: Ul,\n        li: Li,\n        code: InlineCode,\n    },\n}).Compiler\n","import React, { useState } from 'react'\nimport { graphql, navigate } from 'gatsby'\nimport useLocalStorage from '@illinois/react-use-local-storage'\n\nimport { renderAst } from '../markdown'\nimport { ChapterContext } from '../context'\nimport Layout from '../components/layout'\nimport { Button } from '../components/button'\n\nimport classes from '../styles/chapter.module.sass'\n\nconst Template = ({ data }) => {\n    const { markdownRemark, site } = data\n    const { courseId } = site.siteMetadata\n    const { frontmatter, htmlAst } = markdownRemark\n    const { title, description, prev, next, id } = frontmatter\n    const [activeExc, setActiveExc] = useState(null)\n    const [completed, setCompleted] = useLocalStorage(`${courseId}-completed-${id}`, [])\n    const html = renderAst(htmlAst)\n    const buttons = [\n        { slug: prev, text: '« Previous Chapter' },\n        { slug: next, text: 'Next Chapter »' },\n    ]\n\n    return (\n        <ChapterContext.Provider value={{ activeExc, setActiveExc, completed, setCompleted }}>\n            <Layout title={title} description={description}>\n                {html}\n\n                <section className={classes.pagination}>\n                    {buttons.map(({ slug, text }) => (\n                        <div key={slug}>\n                            {slug && (\n                                <Button variant=\"secondary\" small onClick={() => navigate(slug)}>\n                                    {text}\n                                </Button>\n                            )}\n                        </div>\n                    ))}\n                </section>\n            </Layout>\n        </ChapterContext.Provider>\n    )\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n    query($slug: String!) {\n        site {\n            siteMetadata {\n                courseId\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            htmlAst\n            frontmatter {\n                id\n                title\n                description\n                next\n                prev\n            }\n        }\n    }\n`\n","var React = require('react');\n\nfunction IconCheck (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M9 16.172l10.594-10.594 1.406 1.406-12 12-5.578-5.578 1.406-1.406z\"}));\n}\n\nIconCheck.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"currentColor\"};\n\nmodule.exports = IconCheck;\n\nIconCheck.default = IconCheck;\n","var React = require('react');\n\nfunction IconSlides (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M23.8 2.5A2.5 2.5 0 0 0 21.3 0H2.5A2.5 2.5 0 0 0 0 2.5v9.9a2.5 2.5 0 0 0 2.3 2.5v-1A1.5 1.5 0 0 1 1 12.4V2.5A1.5 1.5 0 0 1 2.5 1h18.8a1.5 1.5 0 0 1 1.5 1.5v3h1zM2.3 13.9v1z M23.5 20.3H4.8a2.5 2.5 0 0 1-2.5-2.5V8a2.5 2.5 0 0 1 2.5-2.5h18.7A2.5 2.5 0 0 1 26 8v9.8a2.5 2.5 0 0 1-2.5 2.5zM4.8 6.5A1.4 1.4 0 0 0 3.3 8v9.8a1.4 1.4 0 0 0 1.5 1.5h18.7a1.4 1.4 0 0 0 1.5-1.5V8a1.4 1.4 0 0 0-1.5-1.5z M15.8 9.5h7.1v1h-7.1z M15.8 12.4h7.1v1h-7.1z M15.9 15.3H23v1h-7.1z M4.9 10h1.5v6.5H4.9zM7.4 11.7h1.5v4.74H7.4zM10 11.7h1.5v4.74H10z\",\"key\":0}),React.createElement(\"circle\",{\"cx\":\"14.1\",\"cy\":\"10\",\"r\":\"0.7\",\"key\":1}),React.createElement(\"circle\",{\"cx\":\"14.1\",\"cy\":\"12.9\",\"r\":\"0.7\",\"key\":2}),React.createElement(\"circle\",{\"cx\":\"14.2\",\"cy\":\"15.8\",\"r\":\"0.7\",\"key\":3})]);\n}\n\nIconSlides.defaultProps = {\"width\":\"24\",\"height\":\"32\",\"viewBox\":\"0 0 26 17\",\"fill\":\"currentColor\"};\n\nmodule.exports = IconSlides;\n\nIconSlides.default = IconSlides;\n"],"sourceRoot":""}